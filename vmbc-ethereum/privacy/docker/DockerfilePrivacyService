# Containerize UTT library exposed as an GRPC service!
# Run with: --add-host=host.docker.internal:host-gateway

ARG CONCORD_BFT_IMAGE_REPO="concord-bft"
ARG CONCORD_BFT_IMAGE_TAG="0.60"
FROM ${CONCORD_BFT_IMAGE_REPO}:${CONCORD_BFT_IMAGE_TAG} as builder

# Compile wallet command line app
COPY concord/submodules/concord-bft /concord-bft

WORKDIR /concord-bft

ARG CC="gcc"
ARG CXX="g++"
ARG CXXFLAGS='-fPIE -fstack-protector-all -O3'

RUN mkdir build
## pass additional cmake cli options
# e.g. for building concord code coverage image: --build-arg CMAKE_OPTIONS="-DCODE_INSTRUMENTATION=CODECOVERAGE"
ARG CMAKE_OPTIONS="-DBUILD_UTT=ON"
# Please do not split to several lines, this line is parsed by Makefile
RUN cmake ${CMAKE_OPTIONS} -B build/ -S .

RUN cmake --build build/ --target privacy-wallet-service

FROM ubuntu:22.04-amd64
RUN apt-get update && apt-get install -y netcat

# Wallet service - Node.js gRPC server using web3.js
WORKDIR /app

# Get the installed libraries and applications from the earlier stage.
COPY --from=builder /usr/local/ /usr/local/
COPY --from=builder /concord-bft/build/utt/privacy-wallet-service/privacy-wallet-service .

# Regenerate the shared-library cache.
RUN ldconfig && ldconfig /usr/local/ssl/lib/

COPY privacy-demo/docker/entrypoint_privacy_service.sh .
RUN chmod +x entrypoint_privacy_service.sh

# Environment Variables
# the values are not required to be explicitly specified since the entire env variables are copied.
# this is done explicitly more for documentation and to cross check if the 
# containers ENV are satisfied by kubernetes config map / deployments
ENV PRIVACY_WALLET_GRPC_SERVICE_PORT=49002

COPY privacy-demo/docker/.env .
ENTRYPOINT ["./entrypoint_privacy_service.sh"]