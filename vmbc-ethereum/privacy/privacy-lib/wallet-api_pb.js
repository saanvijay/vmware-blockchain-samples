// source: wallet-api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.ReqCase', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.RespCase', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.TxType', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest', null, global);
goog.exportSymbol('proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.repeatedFields_, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.repeatedFields_, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.repeatedFields_, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.repeatedFields_, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.repeatedFields_, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.repeatedFields_, null);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.oneofGroups_);
};
goog.inherits(proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.displayName = 'proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    budget: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    numvalidators: jspb.Message.getFieldWithDefault(msg, 2, 0),
    validatorpublickeyList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest;
  return proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBudget(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumvalidators(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addValidatorpublickey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBudget();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getNumvalidators();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getValidatorpublickeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional bool budget = 1;
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.prototype.getBudget = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.prototype.setBudget = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint32 numValidators = 2;
 * @return {number}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.prototype.getNumvalidators = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.prototype.setNumvalidators = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated string validatorPublicKey = 3;
 * @return {!Array<string>}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.prototype.getValidatorpublickeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.prototype.setValidatorpublickeyList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.prototype.addValidatorpublickey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.prototype.clearValidatorpublickeyList = function() {
  return this.setValidatorpublickeyList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    configuration: msg.getConfiguration_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse;
  return proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfiguration_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes configuration = 1;
 * @return {!(string|Uint8Array)}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.prototype.getConfiguration = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes configuration = 1;
 * This is a type-conversion wrapper around `getConfiguration()`
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.prototype.getConfiguration_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getConfiguration()));
};


/**
 * optional bytes configuration = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getConfiguration()`
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.prototype.getConfiguration_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getConfiguration()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.prototype.setConfiguration = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    privateKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    publicKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    publicApplicationConfig: msg.getPublicApplicationConfig_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest;
  return proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivateKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPublicApplicationConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrivateKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPublicKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPublicApplicationConfig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string private_key = 1;
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.prototype.getPrivateKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.prototype.setPrivateKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string public_key = 2;
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.prototype.getPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.prototype.setPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bytes public_application_config = 4;
 * @return {!(string|Uint8Array)}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.prototype.getPublicApplicationConfig = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes public_application_config = 4;
 * This is a type-conversion wrapper around `getPublicApplicationConfig()`
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.prototype.getPublicApplicationConfig_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPublicApplicationConfig()));
};


/**
 * optional bytes public_application_config = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPublicApplicationConfig()`
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.prototype.getPublicApplicationConfig_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPublicApplicationConfig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.prototype.setPublicApplicationConfig = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    succ: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse;
  return proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSucc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSucc();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool succ = 1;
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.prototype.getSucc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.prototype.setSucc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest;
  return proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rcm1: msg.getRcm1_asB64(),
    rcm1Sig: msg.getRcm1Sig_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse;
  return proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPid(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRcm1(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRcm1Sig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRcm1_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getRcm1Sig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string pid = 1;
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.prototype.getPid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.prototype.setPid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes rcm1 = 2;
 * @return {!(string|Uint8Array)}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.prototype.getRcm1 = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes rcm1 = 2;
 * This is a type-conversion wrapper around `getRcm1()`
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.prototype.getRcm1_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRcm1()));
};


/**
 * optional bytes rcm1 = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRcm1()`
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.prototype.getRcm1_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRcm1()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.prototype.setRcm1 = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes rcm1_sig = 3;
 * @return {!(string|Uint8Array)}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.prototype.getRcm1Sig = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes rcm1_sig = 3;
 * This is a type-conversion wrapper around `getRcm1Sig()`
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.prototype.getRcm1Sig_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRcm1Sig()));
};


/**
 * optional bytes rcm1_sig = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRcm1Sig()`
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.prototype.getRcm1Sig_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRcm1Sig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.prototype.setRcm1Sig = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rcmSig: msg.getRcmSig_asB64(),
    s2List: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest;
  return proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRcmSig(value);
      break;
    case 2:
      var values = /** @type {!Array<string>} */ (reader.isDelimited() ? reader.readPackedUint64String() : [reader.readUint64String()]);
      for (var i = 0; i < values.length; i++) {
        msg.addS2(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRcmSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getS2List();
  if (f.length > 0) {
    writer.writePackedUint64String(
      2,
      f
    );
  }
};


/**
 * optional bytes rcm_sig = 1;
 * @return {!(string|Uint8Array)}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.prototype.getRcmSig = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes rcm_sig = 1;
 * This is a type-conversion wrapper around `getRcmSig()`
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.prototype.getRcmSig_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRcmSig()));
};


/**
 * optional bytes rcm_sig = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRcmSig()`
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.prototype.getRcmSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRcmSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.prototype.setRcmSig = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated uint64 s2 = 2;
 * @return {!Array<string>}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.prototype.getS2List = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.prototype.setS2List = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.prototype.addS2 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.prototype.clearS2List = function() {
  return this.setS2List([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    succ: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse;
  return proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSucc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSucc();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool succ = 1;
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.prototype.getSucc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.prototype.setSucc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tx: msg.getTx_asB64(),
    sigsList: msg.getSigsList_asB64(),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest;
  return proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addSigs(value);
      break;
    case 3:
      var value = /** @type {!proto.vmware.concord.privacy.wallet.api.v1.TxType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSigsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional bytes tx = 1;
 * @return {!(string|Uint8Array)}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes tx = 1;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated bytes sigs = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.getSigsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes sigs = 2;
 * This is a type-conversion wrapper around `getSigsList()`
 * @return {!Array<string>}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.getSigsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getSigsList()));
};


/**
 * repeated bytes sigs = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSigsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.getSigsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getSigsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.setSigsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.addSigs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.clearSigsList = function() {
  return this.setSigsList([]);
};


/**
 * optional TxType type = 3;
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.TxType}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.getType = function() {
  return /** @type {!proto.vmware.concord.privacy.wallet.api.v1.TxType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.TxType} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    succ: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse;
  return proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSucc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSucc();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool succ = 1;
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.prototype.getSucc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.prototype.setSucc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx;
  return proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
};


/**
 * optional uint64 amount = 1;
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx;
  return proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
};


/**
 * optional uint64 amount = 1;
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    recipientPid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    recipientPublicKey: msg.getRecipientPublicKey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx;
  return proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientPid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRecipientPublicKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getRecipientPid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRecipientPublicKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional uint64 amount = 1;
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string recipient_pid = 2;
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.prototype.getRecipientPid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.prototype.setRecipientPid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes recipient_public_key = 3;
 * @return {!(string|Uint8Array)}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.prototype.getRecipientPublicKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes recipient_public_key = 3;
 * This is a type-conversion wrapper around `getRecipientPublicKey()`
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.prototype.getRecipientPublicKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRecipientPublicKey()));
};


/**
 * optional bytes recipient_public_key = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRecipientPublicKey()`
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.prototype.getRecipientPublicKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRecipientPublicKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.prototype.setRecipientPublicKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tx: msg.getTx_asB64(),
    pb_final: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    numOfOutputCoins: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse;
  return proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFinal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumOfOutputCoins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFinal();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getNumOfOutputCoins();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional bytes tx = 1;
 * @return {!(string|Uint8Array)}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes tx = 1;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool final = 2;
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.prototype.getFinal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.prototype.setFinal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional uint32 num_of_output_coins = 3;
 * @return {number}
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.prototype.getNumOfOutputCoins = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.prototype.setNumOfOutputCoins = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest;
  return proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    budget: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    balance: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    userId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    coinsMap: (f = msg.getCoinsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse;
  return proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setBudget(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setBalance(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 4:
      var value = msg.getCoinsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readUint64, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBudget();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getBalance();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCoinsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeUint64);
  }
};


/**
 * optional uint64 budget = 1;
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.prototype.getBudget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.prototype.setBudget = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 balance = 2;
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.prototype.getBalance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.prototype.setBalance = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, uint64> coins = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.prototype.getCoinsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.prototype.clearCoinsMap = function() {
  this.getCoinsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    keysList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    valuesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest;
  return proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addKeys(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string keys = 1;
 * @return {!Array<string>}
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.prototype.getKeysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.prototype.setKeysList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.prototype.addKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};


/**
 * repeated string values = 2;
 * @return {!Array<string>}
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    succ: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse;
  return proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSucc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSucc();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool succ = 1;
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.prototype.getSucc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.prototype.setSucc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    keysList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest;
  return proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string keys = 1;
 * @return {!Array<string>}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.prototype.getKeysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.prototype.setKeysList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.prototype.addKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse;
  return proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string values = 1;
 * @return {!Array<string>}
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_ = [[2,3,4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.ReqCase = {
  REQ_NOT_SET: 0,
  PRIVACY_APP_CONFIG: 2,
  PRIVACY_WALLET_CONFIG_REQUEST: 3,
  USER_REGISTRATION_REQUEST: 4,
  USER_REGISTRATION_UPDATE_REQUEST: 5,
  CLAIM_COINS_REQUEST: 6,
  GENERATE_MINT_TX_REQUEST: 7,
  GENERATE_BURN_TX_REQUEST: 8,
  GENERATE_TRANSFER_TX_REQUEST: 9,
  GET_STATE_REQUEST: 10,
  SET_APP_DATA_REQUEST: 11,
  GET_APP_DATA_REQUEST: 12
};

/**
 * @return {proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.ReqCase}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.getReqCase = function() {
  return /** @type {proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.ReqCase} */(jspb.Message.computeOneofCase(this, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeout: (f = msg.getTimeout()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    privacyAppConfig: (f = msg.getPrivacyAppConfig()) && proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.toObject(includeInstance, f),
    privacyWalletConfigRequest: (f = msg.getPrivacyWalletConfigRequest()) && proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.toObject(includeInstance, f),
    userRegistrationRequest: (f = msg.getUserRegistrationRequest()) && proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest.toObject(includeInstance, f),
    userRegistrationUpdateRequest: (f = msg.getUserRegistrationUpdateRequest()) && proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.toObject(includeInstance, f),
    claimCoinsRequest: (f = msg.getClaimCoinsRequest()) && proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.toObject(includeInstance, f),
    generateMintTxRequest: (f = msg.getGenerateMintTxRequest()) && proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.toObject(includeInstance, f),
    generateBurnTxRequest: (f = msg.getGenerateBurnTxRequest()) && proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.toObject(includeInstance, f),
    generateTransferTxRequest: (f = msg.getGenerateTransferTxRequest()) && proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.toObject(includeInstance, f),
    getStateRequest: (f = msg.getGetStateRequest()) && proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest.toObject(includeInstance, f),
    setAppDataRequest: (f = msg.getSetAppDataRequest()) && proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.toObject(includeInstance, f),
    getAppDataRequest: (f = msg.getGetAppDataRequest()) && proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest;
  return proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTimeout(value);
      break;
    case 2:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.deserializeBinaryFromReader);
      msg.setPrivacyAppConfig(value);
      break;
    case 3:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.deserializeBinaryFromReader);
      msg.setPrivacyWalletConfigRequest(value);
      break;
    case 4:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest.deserializeBinaryFromReader);
      msg.setUserRegistrationRequest(value);
      break;
    case 5:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.deserializeBinaryFromReader);
      msg.setUserRegistrationUpdateRequest(value);
      break;
    case 6:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.deserializeBinaryFromReader);
      msg.setClaimCoinsRequest(value);
      break;
    case 7:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.deserializeBinaryFromReader);
      msg.setGenerateMintTxRequest(value);
      break;
    case 8:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.deserializeBinaryFromReader);
      msg.setGenerateBurnTxRequest(value);
      break;
    case 9:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.deserializeBinaryFromReader);
      msg.setGenerateTransferTxRequest(value);
      break;
    case 10:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest.deserializeBinaryFromReader);
      msg.setGetStateRequest(value);
      break;
    case 11:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.deserializeBinaryFromReader);
      msg.setSetAppDataRequest(value);
      break;
    case 12:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.deserializeBinaryFromReader);
      msg.setGetAppDataRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeout();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getPrivacyAppConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest.serializeBinaryToWriter
    );
  }
  f = message.getPrivacyWalletConfigRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest.serializeBinaryToWriter
    );
  }
  f = message.getUserRegistrationRequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest.serializeBinaryToWriter
    );
  }
  f = message.getUserRegistrationUpdateRequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest.serializeBinaryToWriter
    );
  }
  f = message.getClaimCoinsRequest();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest.serializeBinaryToWriter
    );
  }
  f = message.getGenerateMintTxRequest();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx.serializeBinaryToWriter
    );
  }
  f = message.getGenerateBurnTxRequest();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx.serializeBinaryToWriter
    );
  }
  f = message.getGenerateTransferTxRequest();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx.serializeBinaryToWriter
    );
  }
  f = message.getGetStateRequest();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest.serializeBinaryToWriter
    );
  }
  f = message.getSetAppDataRequest();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest.serializeBinaryToWriter
    );
  }
  f = message.getGetAppDataRequest();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration timeout = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.getTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.clearTimeout = function() {
  return this.setTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PrivacyAppConfigRequest privacy_app_config = 2;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.getPrivacyAppConfig = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest, 2));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigRequest|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.setPrivacyAppConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.clearPrivacyAppConfig = function() {
  return this.setPrivacyAppConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.hasPrivacyAppConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PrivacyWalletConfigRequest privacy_wallet_config_request = 3;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.getPrivacyWalletConfigRequest = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest, 3));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigRequest|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.setPrivacyWalletConfigRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.clearPrivacyWalletConfigRequest = function() {
  return this.setPrivacyWalletConfigRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.hasPrivacyWalletConfigRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UserRegistrationRequest user_registration_request = 4;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.getUserRegistrationRequest = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest, 4));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationRequest|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.setUserRegistrationRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.clearUserRegistrationRequest = function() {
  return this.setUserRegistrationRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.hasUserRegistrationRequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional UserRegistrationUpdateRequest user_registration_update_request = 5;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.getUserRegistrationUpdateRequest = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest, 5));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateRequest|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.setUserRegistrationUpdateRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.clearUserRegistrationUpdateRequest = function() {
  return this.setUserRegistrationUpdateRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.hasUserRegistrationUpdateRequest = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ClaimCoinsRequest claim_coins_request = 6;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.getClaimCoinsRequest = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest, 6));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsRequest|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.setClaimCoinsRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.clearClaimCoinsRequest = function() {
  return this.setClaimCoinsRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.hasClaimCoinsRequest = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional GenerateMintTx generate_mint_tx_request = 7;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.getGenerateMintTxRequest = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx, 7));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.GenerateMintTx|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.setGenerateMintTxRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.clearGenerateMintTxRequest = function() {
  return this.setGenerateMintTxRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.hasGenerateMintTxRequest = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional GenerateBurnTx generate_burn_tx_request = 8;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.getGenerateBurnTxRequest = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx, 8));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.GenerateBurnTx|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.setGenerateBurnTxRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.clearGenerateBurnTxRequest = function() {
  return this.setGenerateBurnTxRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.hasGenerateBurnTxRequest = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional GenerateTransferTx generate_transfer_tx_request = 9;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.getGenerateTransferTxRequest = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx, 9));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.GenerateTransferTx|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.setGenerateTransferTxRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.clearGenerateTransferTxRequest = function() {
  return this.setGenerateTransferTxRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.hasGenerateTransferTxRequest = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional GetStateRequest get_state_request = 10;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.getGetStateRequest = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest, 10));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.GetStateRequest|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.setGetStateRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.clearGetStateRequest = function() {
  return this.setGetStateRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.hasGetStateRequest = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional SetAppDataRequest set_app_data_request = 11;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.getSetAppDataRequest = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest, 11));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.SetAppDataRequest|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.setSetAppDataRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.clearSetAppDataRequest = function() {
  return this.setSetAppDataRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.hasSetAppDataRequest = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional GetAppDataRequest get_app_data_request = 12;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.getGetAppDataRequest = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest, 12));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.GetAppDataRequest|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.setGetAppDataRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.clearGetAppDataRequest = function() {
  return this.setGetAppDataRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletRequest.prototype.hasGetAppDataRequest = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.oneofGroups_ = [[2,3,4,5,6,7,8,9,10]];

/**
 * @enum {number}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.RespCase = {
  RESP_NOT_SET: 0,
  PRIVACY_APP_CONFIG_RESPONSE: 2,
  PRIVACY_WALLET_CONFIG_RESPONSE: 3,
  USER_REGISTRATION_RESPONSE: 4,
  USER_REGISTRATION_UPDATE_RESPONSE: 5,
  CLAIM_COINS_RESPONSE: 6,
  GENERATE_TX_RESPONSE: 7,
  GET_STATE_RESPONSE: 8,
  SET_APP_DATA_RESPONSE: 9,
  GET_APP_DATA_RESPONSE: 10
};

/**
 * @return {proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.RespCase}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.getRespCase = function() {
  return /** @type {proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.RespCase} */(jspb.Message.computeOneofCase(this, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: jspb.Message.getFieldWithDefault(msg, 1, ""),
    privacyAppConfigResponse: (f = msg.getPrivacyAppConfigResponse()) && proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.toObject(includeInstance, f),
    privacyWalletConfigResponse: (f = msg.getPrivacyWalletConfigResponse()) && proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.toObject(includeInstance, f),
    userRegistrationResponse: (f = msg.getUserRegistrationResponse()) && proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.toObject(includeInstance, f),
    userRegistrationUpdateResponse: (f = msg.getUserRegistrationUpdateResponse()) && proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.toObject(includeInstance, f),
    claimCoinsResponse: (f = msg.getClaimCoinsResponse()) && proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.toObject(includeInstance, f),
    generateTxResponse: (f = msg.getGenerateTxResponse()) && proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.toObject(includeInstance, f),
    getStateResponse: (f = msg.getGetStateResponse()) && proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.toObject(includeInstance, f),
    setAppDataResponse: (f = msg.getSetAppDataResponse()) && proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.toObject(includeInstance, f),
    getAppDataResponse: (f = msg.getGetAppDataResponse()) && proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse;
  return proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.deserializeBinaryFromReader);
      msg.setPrivacyAppConfigResponse(value);
      break;
    case 3:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.deserializeBinaryFromReader);
      msg.setPrivacyWalletConfigResponse(value);
      break;
    case 4:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.deserializeBinaryFromReader);
      msg.setUserRegistrationResponse(value);
      break;
    case 5:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.deserializeBinaryFromReader);
      msg.setUserRegistrationUpdateResponse(value);
      break;
    case 6:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.deserializeBinaryFromReader);
      msg.setClaimCoinsResponse(value);
      break;
    case 7:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.deserializeBinaryFromReader);
      msg.setGenerateTxResponse(value);
      break;
    case 8:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.deserializeBinaryFromReader);
      msg.setGetStateResponse(value);
      break;
    case 9:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.deserializeBinaryFromReader);
      msg.setSetAppDataResponse(value);
      break;
    case 10:
      var value = new proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse;
      reader.readMessage(value,proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.deserializeBinaryFromReader);
      msg.setGetAppDataResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrivacyAppConfigResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse.serializeBinaryToWriter
    );
  }
  f = message.getPrivacyWalletConfigResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse.serializeBinaryToWriter
    );
  }
  f = message.getUserRegistrationResponse();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse.serializeBinaryToWriter
    );
  }
  f = message.getUserRegistrationUpdateResponse();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse.serializeBinaryToWriter
    );
  }
  f = message.getClaimCoinsResponse();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse.serializeBinaryToWriter
    );
  }
  f = message.getGenerateTxResponse();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse.serializeBinaryToWriter
    );
  }
  f = message.getGetStateResponse();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse.serializeBinaryToWriter
    );
  }
  f = message.getSetAppDataResponse();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse.serializeBinaryToWriter
    );
  }
  f = message.getGetAppDataResponse();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional string err = 1;
 * @return {string}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.getErr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.setErr = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.clearErr = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.hasErr = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PrivacyAppConfigResponse privacy_app_config_response = 2;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.getPrivacyAppConfigResponse = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse, 2));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.PrivacyAppConfigResponse|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.setPrivacyAppConfigResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.clearPrivacyAppConfigResponse = function() {
  return this.setPrivacyAppConfigResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.hasPrivacyAppConfigResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PrivacyWalletConfigResponse privacy_wallet_config_response = 3;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.getPrivacyWalletConfigResponse = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse, 3));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletConfigResponse|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.setPrivacyWalletConfigResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.clearPrivacyWalletConfigResponse = function() {
  return this.setPrivacyWalletConfigResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.hasPrivacyWalletConfigResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UserRegistrationResponse user_registration_response = 4;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.getUserRegistrationResponse = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse, 4));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationResponse|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.setUserRegistrationResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.clearUserRegistrationResponse = function() {
  return this.setUserRegistrationResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.hasUserRegistrationResponse = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional UserRegistrationUpdateResponse user_registration_update_response = 5;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.getUserRegistrationUpdateResponse = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse, 5));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.UserRegistrationUpdateResponse|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.setUserRegistrationUpdateResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.clearUserRegistrationUpdateResponse = function() {
  return this.setUserRegistrationUpdateResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.hasUserRegistrationUpdateResponse = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ClaimCoinsReponse claim_coins_response = 6;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.getClaimCoinsResponse = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse, 6));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.ClaimCoinsReponse|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.setClaimCoinsResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.clearClaimCoinsResponse = function() {
  return this.setClaimCoinsResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.hasClaimCoinsResponse = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional GenerateTxResponse generate_tx_response = 7;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.getGenerateTxResponse = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse, 7));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.GenerateTxResponse|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.setGenerateTxResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.clearGenerateTxResponse = function() {
  return this.setGenerateTxResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.hasGenerateTxResponse = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional GetStateResponse get_state_response = 8;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.getGetStateResponse = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse, 8));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.GetStateResponse|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.setGetStateResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.clearGetStateResponse = function() {
  return this.setGetStateResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.hasGetStateResponse = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional SetAppDataResponse set_app_data_response = 9;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.getSetAppDataResponse = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse, 9));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.SetAppDataResponse|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.setSetAppDataResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.clearSetAppDataResponse = function() {
  return this.setSetAppDataResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.hasSetAppDataResponse = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional GetAppDataResponse get_app_data_response = 10;
 * @return {?proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.getGetAppDataResponse = function() {
  return /** @type{?proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse} */ (
    jspb.Message.getWrapperField(this, proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse, 10));
};


/**
 * @param {?proto.vmware.concord.privacy.wallet.api.v1.GetAppDataResponse|undefined} value
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
*/
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.setGetAppDataResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse} returns this
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.clearGetAppDataResponse = function() {
  return this.setGetAppDataResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vmware.concord.privacy.wallet.api.v1.PrivacyWalletResponse.prototype.hasGetAppDataResponse = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * @enum {number}
 */
proto.vmware.concord.privacy.wallet.api.v1.TxType = {
  MINT: 0,
  BURN: 1,
  TRANSFER: 2,
  BUDGET: 3
};

goog.object.extend(exports, proto.vmware.concord.privacy.wallet.api.v1);
