apiVersion: apps/v1
kind: Deployment
metadata:
  name: vmbc-deployment-client-2-ethrpc
  labels:
    app: client-2-ethrpc
    blockchainId: {{ .Values.global.blockchainId }}
spec:
  replicas: {{ .Values.global.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: client-2-ethrpc
      blockchainId: {{ .Values.global.blockchainId }}
  template:
    metadata:
      labels:
        app: client-2-ethrpc
        blockchainId: {{ .Values.global.blockchainId }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/ConfigMap-client-2-ethrpc.yaml") . | sha256sum }}
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - client-2-clientservice
              topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
        - name: vmwathena-regcred
      volumes:
        {{- $fluent := $.Files.Get "fluentd/config/fluent.conf" }}
        {{ if $fluent }}
        - name: vmbc-docker-log
          hostPath:
            path: /var/log/pods
        - name: vmbc-docker-lib
          hostPath:
            path: /var/lib/docker/containers
        - name: vmbc-configmap-fluentd
          configMap:
            name: vmbc-configmap-fluentd
        {{ end }}
        - name: config-volume
          configMap:
            name: vmbc-configmap-client-2-ethrpc
        - name: secret-volume
          secret:
            secretName: vmbc-secret-client-2-ethrpc

        {{- $tlsEnabled := "" }}
        {{ if eq  $tlsEnabled "true" }}
        - name: server-key-volume
          secret:
            secretName: {{ .Values.clientTlsAndTokenAuthSettings.client2.serverPrivateKeySecret | default "" }}
        {{ end }}
      containers:
        - name: client-2-ethrpc
          image: {{ include "ethrpc.image" . }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 50505
              protocol: TCP
            - name: "tcp-9891"
              containerPort: 9891
              protocol: TCP

          {{- $tlsEnabled := "" }}
          {{ if eq  $tlsEnabled "true" }}
          env:
            - name: SERVER_SSL_ENABLED
              value: ""
            - name: SERVER_SSL_CLIENTAUTH
              value: ""
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ENABLED
              value: "false"
            {{- $tokenauthenticationcontent := .Values.clientTlsAndTokenAuthSettings.client2.tokenAuthentication }}
            {{ if $tokenauthenticationcontent }}
            {{- $issueruricontent := .Values.clientTlsAndTokenAuthSettings.client2.tokenAuthentication.issuerUri }}
            {{ if $issueruricontent }}
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI
              value: {{ .Values.clientTlsAndTokenAuthSettings.client2.tokenAuthentication.issuerUri }}
            {{ end }}
            {{- $publicjwkscontent := .Values.clientTlsAndTokenAuthSettings.client2.tokenAuthentication.publicJwks }}
            {{ if $publicjwkscontent }}
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_PUBLIC-JWKS
              value: /config/public-jwk.json
            {{ end }}
            {{ end }}
          {{ end }}

          resources:
            limits:
              cpu: "{{ .Values.resources.client.cpuLimit | default .Values.resources.client.defaultCpuLimit }}"
              memory: "{{ .Values.resources.client.memoryLimit | default .Values.resources.client.defaultMemoryLimit }}"
            requests:
              cpu: "{{ .Values.resources.client.cpuRequest | default .Values.resources.client.defaultCpuRequest }}"
              memory: "{{ .Values.resources.client.memoryRequest | default .Values.resources.client.defaultMemoryRequest }}"
          volumeMounts:
          ##########################################
          #           config file volumes          #
          ##########################################
          # environment vars file
          {{- $environmentvarsfile := "client-2/config/ethrpc/environment-vars" }}
          {{- $environmentvarsfilePrefixRemoved := $environmentvarsfile | replace "client-2" "" }}
            - name: config-volume
              mountPath: {{ $environmentvarsfilePrefixRemoved }}
              subPath: environment-vars-file
          ##########################################
          #           Secrets volumes              #
          ##########################################
          # cert private keys
          {{ range $path, $_ := .Files.Glob "client-2/config/ethrpc/*/*.pem" }}
          {{- $prefixRemoved := $path | replace "client-2" "" }}
            - name: secret-volume
              mountPath: {{ $prefixRemoved }}
              subPath: {{ $path | replace "/" "-" }}
          {{- end }}

          {{- $tlsEnabled := "" }}
          {{- if eq  $tlsEnabled "true" }}

          {{- $servercertcontent := .Values.clientTlsAndTokenAuthSettings.client2.serverCert }}
          {{- if $servercertcontent }}
          # server.key
            - name: server-key-volume
              mountPath: /config/ethrpc.key
              subPath: server.key
          # server.crt
            - name: config-volume
              mountPath: /config/ethrpc.crt
              subPath: server-cert-file
          {{- end }}

          {{- $clientcacertcontent := .Values.clientTlsAndTokenAuthSettings.client2.clientRootCaCert }}
          {{- if $clientcacertcontent }}
          # client-ca.crt
            - name: config-volume
              mountPath: /config/client-ca.crt
              subPath: client-ca-cert-file
          {{- end }}

          # token authentication
          {{- $tokenauthenticationcontent := .Values.clientTlsAndTokenAuthSettings.client2.tokenAuthentication }}
          {{ if $tokenauthenticationcontent }}

          {{- $issuercacertcontent := .Values.clientTlsAndTokenAuthSettings.client2.tokenAuthentication.issuerCaCert }}
          {{- if $issuercacertcontent }}
          # issuer-ca.crt
            - name: config-volume
              mountPath: /config/authorization-server-ca.crt
              subPath: issuer-ca-cert-file
          {{-  end }}

          {{- $publicjwkcontent := .Values.clientTlsAndTokenAuthSettings.client2.tokenAuthentication.publicJwks }}
          {{- if $publicjwkcontent }}
          # public-jwk.json
            - name: config-volume
              mountPath: /config/public-jwk.json
              subPath: public-jwk-json-file
          {{- end }}

          {{- end }}

          {{- end }}
    {{- $fluent := $.Files.Get "fluentd/config/fluent.conf" }}
    {{ if $fluent }}
        - name: fluentd
          image: {{ include "fluentd.image" . }}
          imagePullPolicy: IfNotPresent
          env:
            - name: MULTI_LOGGING_ENABLED
              value: "true"
            - name: SERVICE_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: SERVICE_NODE_NAME
              value: client-2
            - name: SERVICE_KIND_NAME
              value: "ethrpc"
            - name: LOGGING_URL
              value: {{ .Values.logManagement.endpoint_1.url }}
          volumeMounts:
            - name: vmbc-docker-log
              mountPath: /vmbc/logs/pods
              readOnly: false
            - name: vmbc-docker-lib
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: vmbc-configmap-fluentd
              mountPath: /fluentd/etc/fluent.conf
              subPath: fluent.conf
              readOnly: true
            {{- $certs:= .Files.Glob "fluentd/config/certs/*.crt" }}
            {{ if $certs }}
            - name: vmbc-configmap-fluentd
              mountPath: /fluentd/certs
            {{ end }}
    {{ end }}
