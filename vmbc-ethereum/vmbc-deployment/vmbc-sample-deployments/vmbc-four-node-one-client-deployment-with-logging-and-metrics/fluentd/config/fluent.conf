##############################################################
### VMware Blockchain (c) 2021 - Fluentd Configuration ###
##############################################################


############################################
#                 SOURCE                   #
############################################

<source>
  @type tail
  path "/vmbc/logs/pods/#{ENV['SERVICE_NAMESPACE']}_*#{ENV['SERVICE_NODE_NAME']}-#{ENV['SERVICE_KIND_NAME']}*/*#{ENV['SERVICE_KIND_NAME']}*/*.log"
  pos_file "/vmbc/meta/fluentd-docker-#{ENV['SERVICE_NODE_NAME']}-#{ENV['SERVICE_KIND_NAME']}.pos"
  read_from_head true
  tag docker.*
  <parse>
        @type multi_format
            <pattern>
              format json
            </pattern>
            <pattern>
              format regexp
              expression /^(?<log>.*)$/
            </pattern>
  </parse>
  refresh_interval 5s
  enable_stat_watcher false
  @label @INPUT
</source>


############################################
#                FILTERS                   #
############################################

<label @INPUT>

  <filter docker.**.*>
    @type record_transformer
    enable_ruby
    <record>
      log ${record["log"].rstrip}
    </record>
  </filter>

  <filter docker.**.*>
    @type concat
    key log
    stream_identity_key container_id
    multiline_start_regexp /^\d{4}-\d{2}-\d{2}[T ]\d{2}:\d{2}:\d{2},\d{3}/
    multiline_end_regexp /^\d{4}-\d{2}-\d{2}\[T ]\d{2}:\d{2}:\d{2},\d{3}/
    flush_interval 15s
    timeout_label @PARSE
  </filter>

  <match docker.**.*>
    @type relabel
    @label @PARSE
  </match>

</label>

<label @PARSE>

  <filter docker.**.*>
    @type parser
    key_name log
    reserve_data true
    remove_key_name_field true
    emit_invalid_record_to_error false

    <parse>
      @type multi_format

      # Concord
      <pattern>
        format regexp
        # Log pattern format: %d{%Y-%m-%dT%H:%M:%S,%qZ}|%-5p|%X{rid}|%c|%X{thread}|%X{cid}|%X{sn}|%X{pri}|%X{path}|%b:%L|%m%n
        expression /^(?<logtime>[^\|]*)(\|)(?<level>[^\|]*)(\|)(?<concord_replica_id>[^\|]*?)(\|)(?<logger>[^\|]*)(\|)(?<thread>[^\|]*?)(\|)(?<correlation_id>[^\|]*?)(\|)(?<sequence_num>[^\|]*?)(\|)(?<primary_replica_id>[^\|]*?)(\|)(?<commit_path>[^\|]*?)(\|)(?<file_line>[^\|]*)(\|)(?<message>[^\|]*)(\|)(?<sequence>[^\|]*)$/
      </pattern>

      # Clientservice
      <pattern>
        format regexp
        # Log pattern format: %D{%Y-%m-%dT%H:%M:%S,%q,%z}|%-5p|%X{rid}|%c|%X{thread}|%X{cid}|%X{sn}|%b:%L|%M|%m|{"primary":"%X{pri}"}|%n
        expression /^(?<logtime>[^\|]*)(\|)(?<level>[^\|]*)(\|)(?<concord_replica_id>[^\|]*?)(\|)(?<logger>[^\|]*)(\|)(?<thread>[^\|]*?)(\|)(?<correlation_id>[^\|]*?)(\|)(?<sequence_num>[^\|]*?)(\|)(?<file_line>[^\|]*)(\|)(?<method>[^\|]*)(\|)(?<message>[^\|]*)(\|)(?<sequence>[^\|]*)(\|)(?<primary>[^\|]*)(\|)$/
      </pattern>

      # EthRpc
      <pattern>
        format regexp
        # Log pattern format: %d{%Y-%m-%dT%H:%M:%S,%qZ}|%-5level|%logger|%thread|%cid|%msg%n
        expression /^(?<logtime>[^\|]*)(\|)(?<level>[^\|]*)(\|)(?<logger>[^\|]*)(\|)(?<thread>[^\|]*?)(\|)(?<correlation_id>[^\|]*?)(\|)(?<message>.*)$/m
      </pattern>

    </parse>
  </filter>

  # Remove Ethrpc initialization messages
  <filter docker.**.*>
    @type grep
    <or>
      <exclude>
        key loggerName
        pattern /^.*springframework.*$/
      </exclude>
      <exclude>
        key uri
        pattern /^.*ctx:uri.*&/
      </exclude>
    </or>
  </filter>

  # Add fields in each log before pushing it to output
  # Filter out "source: stdout" key-value pair
  <filter docker.**.*>
    @type record_modifier
    <record>
      service_name "#{ENV['SERVICE_NODE_NAME']}-#{ENV['SERVICE_KIND_NAME']}"
      blockchain_id "746d220e-1eb9-4d15-ae1b-a224cee8d396"
      node_id "5685440e-b230-4c3b-a8f9-a0eedc99b4d2"
    </record>
    remove_keys source,stream
  </filter>

  <match docker.**.*>
    @type relabel
    @label @RELABEL
  </match>

</label>


############################################
#                OUTPUT                    #
############################################

<label @RELABEL>
  # Rename tag to service name
  <match docker.**.*>
    @type rewrite_tag_filter
    <rule>
      key service_name
      pattern /^(.+)$/
      tag $1
    </rule>
  </match>

  <match *concord* *ethrpc* *clientservice*>
    @type relabel
    @label @OUTPUT
  </match>
</label>

<label @OUTPUT>
  # Push matching logs to one or more logging endpoints.
  # There is one store for each endpoint.
  <match *concord* *ethrpc* *daml* *clientservice*>
    @type copy
    
    <store>
      # Push matching logs to a HTTP endpoint
      @type http
      endpoint "#{ENV['LOGGING_URL']}"
      #tls_ca_cert_path /fluentd${LOG_TLS_CERT}
      tls_verify_mode none
      <auth>
          method basic
           username <Replace Me>
           password <Replace Me>
      </auth>
      #headers {"Authorization":${LOG_AUTH_TOKEN}, "structure":"simple"}

      <format>
        @type json
      </format>
      <buffer>
        @type file
        path /fluentd/log/http-buffer/8eb47546-5189-4152-852a-05818f8ab00c
        total_limit_size 512MB
        chunk_limit_size 32MB
        chunk_limit_records 300
        queue_limit_length 4
        overflow_action drop_oldest_chunk
        flush_thread_count 8
        flush_interval 1s
        flush_mode interval
        flush_at_shutdown true
        retry_type exponential_backoff
        retry_max_interval 5m
        retry_max_times 8
        disable_chunk_backup true
      </buffer>
    </store>

  </match>
</label>